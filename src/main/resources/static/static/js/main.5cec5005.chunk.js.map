{"version":3,"sources":["store/actions/actionTypes.js","store/actions/project.js","store/actions/backlog.js","utils/authUtils.js","store/actions/user.js","hoc/asyncComponent/asyncComponent.js","components/Layout/Header.js","components/Layout/Layout.js","components/Layout/WelcomePage.js","container/Users/Logout.js","App.js","serviceWorker.js","store/reducers/project.js","store/reducers/backlog.js","store/reducers/user.js","store/reducers/index.js","store/store.js","index.js"],"names":["CREATE_UPDATE_PROJECT_FAIL","FETCH_PROJECTS_START","FETCH_PROJECTS_SUCCESS","FETCH_PROJECTS_FAIL","FETCH_PROJECT_BY_PROJECT_ID_SUCCESS","FETCH_PROJECT_BY_PROJECT_ID_FAIL","DELETE_PROJECT_SUCCESS","DELETE_PROJECT_FAIL","CREATE_UPDATE_PROJECT_TASK_FAIL","FETCH_PROJECT_TASKS_START","FETCH_PROJECT_TASKS_SUCCESS","FETCH_PROJECT_TASKS_FAIL","FETCH_PROJECT_TASK_BY_ID_SUCCESS","FETCH_PROJECT_TASK_BY_ID_FAIL","DELETE_PROJECT_TASK_SUCCESS","DELETE_PROJECT_TASK_FAIL","CREATE_USER_SUCCESS","CREATE_USER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","CLEAR_LOGIN_ERROR","LOGOUT","deleteProjectSuccess","projectIdentifier","type","actionTypes","createUpdateProject","project","history","dispatch","a","axios","post","push","errors","response","data","fetchProjects","get","res","projects","fetchProjectByProjectId","deleteProjectByProjectId","delete","error","createUpdateProjectTaskFail","deleteProjectTaskSuccess","taskSequence","sequence","createProjectTask","projectId","projectTask","fetchProjectTasks","tasks","fetchProjectTaskById","task","deleteProjectTaskById","updateProjectTask","taskId","patch","setJWT","token","defaults","headers","common","createNewUser","newUser","user","tryLogin","localStorage","setItem","decoded","jwt_decode","authUser","logout","console","log","removeItem","clearLoginError","checkAuthState","expirationTime","authToken","getItem","decoded_token","currentTime","Date","now","exp","setTimeout","asyncComponent","importComponent","state","component","then","cmp","setState","default","C","this","props","Component","Header","menu","Fragment","className","to","isAuthenticated","username","data-toggle","data-target","id","connect","fullname","children","WelcomePage","onLogout","actions","useEffect","asyncDashboard","asyncCreateUpdateProjectForm","asyncCreateUpdateProjectTaskForm","asyncProjectBoard","asyncLoginForm","asyncRegisterForm","withRouter","onTryAutoSignup","routes","path","exact","Logout","Boolean","window","location","hostname","match","initialState","loading","createUpdateProjectFail","action","fetchProjectsStart","fetchProjectsSuccess","fetchProjectsFail","fetchProjectByProjectIdSuccess","fetchProjectByProjectIdFail","newProjects","filter","deleteProjectFail","reducer","fetchProjectTasksStart","fetchProjectTasksSuccess","fetchProjectTasksFail","fetchProjectTaskByIdSuccess","fetchProjectTaskByIdFail","newTasks","projectSequence","deleteProjectTaskFail","createNewUserSuccess","createNewUserFail","loginSuccess","loginFail","combineReducers","projectReducer","backlog","backlogReducer","userReducer","middleware","thunk","composeEnhancers","compose","process","store","createStore","rootReducer","applyMiddleware","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"kIAAA,4uBAAO,IAAMA,EAA6B,6BAE7BC,EAAuB,uBACvBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAsC,sCACtCC,EAAmC,mCAEnCC,EAAyB,yBACzBC,EAAsB,sBAGtBC,EAAkC,kCAElCC,EAA4B,4BAC5BC,EAA8B,8BAC9BC,EAA2B,2BAE3BC,EAAmC,mCACnCC,EAAgC,gCAEhCC,EAA8B,8BAC9BC,EAA2B,2BAG3BC,EAAsB,sBACtBC,EAAmB,mBAGnBC,EAAgB,gBAChBC,EAAa,aACbC,EAAoB,oBAEpBC,EAAS,U,8iBCUTC,EAAuB,SAACC,GACnC,MAAO,CACLC,KAAMC,IACNF,sBAWSG,EAAsB,SAACC,EAASC,GAC3C,8CAAO,WAAMC,GAAN,SAAAC,EAAA,+EAEGC,IAAMC,KAAK,eAAgBL,GAF9B,OAGHC,EAAQK,KAAK,cAHV,+CAKHJ,GA7DkCK,EA6DD,KAAIC,SAASC,KA5D3C,CACLZ,KAAMC,IACNS,YAqDK,iCAxD8B,IAACA,IAwD/B,oBAAP,uDAUWG,EAAgB,WAC3B,8CAAO,WAAMR,GAAN,eAAAC,EAAA,6DACLD,EA5DK,CACLL,KAAMC,MA0DD,kBAGeM,IAAMO,IAAI,oBAHzB,OAGGC,EAHH,OAIHV,GA1D+BW,EA0DDD,EAAIH,KAzD/B,CACLZ,KAAMC,IACNe,cAmDK,gDAMHX,GArD4BK,EAqDD,EAAD,GApDvB,CACLV,KAAMC,IACNS,YA4CK,kCA/CwB,IAACA,EAPGM,IAsD5B,oBAAP,uDAWWC,EAA0B,SAAClB,GACtC,8CAAO,WAAMM,GAAN,eAAAC,EAAA,+EAEeC,IAAMO,IAAN,uBAA0Bf,IAFzC,OAEGgB,EAFH,OAGHV,GAvDyCF,EAuDDY,EAAIH,KAtDzC,CACLZ,KAAMC,IACNE,aAiDK,gDAKHE,GAlDsCK,EAkDD,KAAIC,SAASC,KAjD/C,CACLZ,KAAMC,IACNS,OAAQA,KA0CH,kCA7CkC,IAACA,EAPGP,IAoDtC,oBAAP,uDAUWe,EAA2B,SAACnB,EAAmBK,GAC1D,8CAAO,WAAMC,GAAN,SAAAC,EAAA,+EAEGC,IAAMY,OAAN,uBAA6BpB,IAFhC,OAKHM,EAASP,EAAqBC,IAL3B,+CAOHM,GAjD4Be,EAiDD,EAAD,GAhDvB,CACLpB,KAAMC,IACNmB,WAuCK,iCA1CwB,IAACA,IA0CzB,oBAAP,uDCtEWC,EAA8B,SAACD,GAC1C,MAAO,CACLpB,KAAMC,IACNmB,UAkBSE,EAA2B,SAACC,GACvC,MAAO,CACLvB,KAAMC,IACNuB,SAAUD,IAWDE,EAAoB,SAACC,EAAWC,EAAavB,GACxD,8CAAO,WAAMC,GAAN,SAAAC,EAAA,+EAEGC,IAAMC,KAAN,4BAAgCkB,GAAaC,GAFhD,OAGHvB,EAAQK,KAAR,yBAA+BiB,IAH5B,+CAKHrB,EAASgB,EAA4B,KAAIV,SAASC,OAL/C,wDAAP,uDAUWgB,EAAoB,SAAC7B,GAChC,8CAAO,WAAMM,GAAN,eAAAC,EAAA,6DACLD,EAnEK,CACLL,KAAMC,MAiED,kBAGeM,IAAMO,IAAN,4BAA+Bf,IAH9C,OAGGgB,EAHH,OAIHV,GAjEmCwB,EAiEDd,EAAIH,KAhEnC,CACLZ,KAAMC,IACN4B,WA0DK,gDAMHxB,GA5DgCe,EA4DD,KAAMT,SAASC,KA3D3C,CACLZ,KAAMC,IACNmB,WAmDK,kCAtD4B,IAACA,EAPGS,IA6DhC,oBAAP,uDAWWC,EAAuB,SAACJ,EAAWH,GAC9C,8CAAO,WAAMlB,GAAN,eAAAC,EAAA,+EAEeC,IAAMO,IAAN,4BAA+BY,EAA/B,YAA4CH,IAF3D,OAEGR,EAFH,OAGHV,GAvDsC0B,EAuDDhB,EAAIH,KAtDtC,CACLZ,KAAMC,IACN8B,UAiDK,gDAKH1B,GAlDmCe,EAkDD,KAAIT,SAASC,KAjD5C,CACLZ,KAAMC,IACNmB,WA0CK,kCA7C+B,IAACA,EAPGW,IAoDnC,oBAAP,uDAUWC,EAAwB,SAACN,EAAWH,GAC/C,8CAAO,WAAMlB,GAAN,SAAAC,EAAA,+EAEGC,IAAMY,OAAN,4BAAkCO,EAAlC,YAA+CH,IAFlD,OAGHlB,EAASiB,EAAyBC,IAH/B,+CAKHlB,GA/CgCe,EA+CD,EAAD,GA9C3B,CACLpB,KAAMC,IACNmB,WAuCK,iCA1C4B,IAACA,IA0C7B,oBAAP,uDAUWa,EAAoB,SAACP,EAAWQ,EAAQP,EAAavB,GAChE,8CAAO,WAAMC,GAAN,SAAAC,EAAA,+EAEGC,IAAM4B,MAAN,4BAAiCT,EAAjC,YAA8CQ,GAAUP,GAF3D,OAGHvB,EAAQK,KAAR,yBAA+BiB,IAH5B,+CAKHrB,EAASgB,EAA4B,KAAIV,SAASC,OAL/C,wDAAP,uDCtGWwB,EAAS,SAAAC,GAChBA,EACF9B,IAAM+B,SAASC,QAAQC,OAAvB,cAAiDH,SAE1C9B,IAAM+B,SAASC,QAAQC,OAAvB,e,iBCqCEC,EAAgB,SAACC,EAAStC,GACrC,8CAAO,WAAMC,GAAN,eAAAC,EAAA,+EAEeC,IAAMC,KAAK,sBAAuBkC,GAFjD,OAEG3B,EAFH,OAGHX,EAAQK,KAAK,gBACbJ,GA3C+BsC,EA2CD5B,EAAIH,KA1C/B,CACLZ,KAAMC,IACN0C,KAAMA,KAoCD,gDAMHtC,GAtC4Be,EAsCD,KAAMT,SAASC,KArCvC,CACLZ,KAAMC,IACNmB,MAAOA,KA6BF,kCAhCwB,IAACA,EAPGuB,IAuC5B,oBAAP,uDAWWC,EAAW,SAACD,GACvB,8CAAO,WAAMtC,GAAN,mBAAAC,EAAA,+EAEeC,IAAMC,KAAK,mBAAoBmC,GAF9C,OAEG5B,EAFH,OAGKsB,EAAUtB,EAAIH,KAAdyB,MACRQ,aAAaC,QAAQ,MAAOT,GAC5BD,EAAOC,GACDU,EAAUC,IAAWX,GAE3BhC,GA7CuB4C,EA6CDF,EA5CnB,CACL/C,KAAMC,IACN0C,KAAMM,KAkCD,kDAcH5C,GA5CoBe,EA4CD,KAAMT,SAASC,KA3C/B,CACLZ,KAAMC,IACNmB,MAAOA,KA2BF,kCA9BgB,IAACA,EAPG6B,IAqCpB,qBAAP,uDAmBWC,EAAS,SAACP,GAIrB,OAHAQ,QAAQC,IAAI,2BAEZP,aAAaQ,WAAW,OACjB,CACLrD,KAAMC,MAIGqD,EAAkB,WAC7B,MAAO,CACLtD,KAAMC,MAIGsD,EAAiB,WAC5B,OAAO,SAAAlD,GACL,IA3D6BmD,EA2DvBC,EAAYZ,aAAaa,QAAQ,OACvC,GAAKD,EAEE,CACL,IAAME,EAAgBX,IAAWS,GAC3BG,EAAcC,KAAKC,MAAQ,IAC7BH,EAAcI,KAAOH,EACvBvD,EAAS6C,MAETd,EAAOqB,GACPpD,GArEyBmD,EAqECG,EAAcI,IAAMF,KAAKC,MAAQ,IApEjEX,QAAQC,IAAI,uBAAwBI,GAC7B,SAAAnD,GACL2D,YAAW,WACTb,QAAQC,IAAI,iBACZ/C,EAAS6C,OACS,IAAjBM,YAuDDnD,EAAS6C,Q,yNCvEAe,EArBQ,SAACC,GACtB,mNACEC,MAAQ,CACNC,UAAW,MAFf,kEAKuB,IAAD,OAClBF,IACGG,MAAK,SAAAC,GACJ,EAAKC,SAAS,CAAEH,UAAWE,EAAIE,eARvC,+BAaI,IAAMC,EAAIC,KAAKP,MAAMC,UAErB,OAAOK,EAAI,kBAACA,EAAMC,KAAKC,OAAY,SAfvC,GAAqBC,cCqDRC,G,YArDA,SAACF,GACd,IAAIG,EACF,kBAAC,IAAMC,SAAP,KACE,wBAAIC,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,mBAA/B,YAIF,wBAAID,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,gBAA9B,WAwBN,OAjBIN,EAAMO,kBACRJ,EACE,kBAAC,IAAMC,SAAP,KACE,wBAAIC,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,cAC5B,uBAAGD,UAAU,4BAA6BL,EAAMQ,WAGpD,wBAAIH,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,iBAA9B,aASN,yBAAKD,UAAU,oDACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,4BAA4BC,GAAG,KAA/C,+BAGA,4BAAQD,UAAU,iBAAiBhF,KAAK,SAASoF,cAAY,WAAWC,cAAY,eAClF,0BAAML,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BM,GAAG,cAC3C,wBAAIN,UAAU,sBACXF,QCjCb,IAOeS,eAPS,SAACpB,GACvB,MAAO,CACLe,gBAAiBf,EAAMxB,KAAKuC,gBAC5BvC,KAAMwB,EAAMxB,KAAKA,QAIN4C,EAlBf,SAAgBZ,GAAQ,IACdO,EAA0BP,EAA1BO,gBAAiBvC,EAASgC,EAAThC,KAEzB,OACE,kBAAC,IAAMoC,SAAP,KACE,kBAAC,EAAD,CAAQG,gBAAiBA,EAAiBC,SAAUxC,EAAK6C,WACxDb,EAAMc,aCmBEC,EA1BK,WAClB,OACE,yBAAKV,UAAU,WACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,kBAAd,oCACA,uBAAGA,UAAU,QAAb,iEAGA,6BACA,kBAAC,IAAD,CAAMC,GAAG,kBAAkBD,UAAU,+BAArC,WAGA,kBAAC,IAAD,CAAMC,GAAG,eAAeD,UAAU,iCAAlC,e,QCICO,cAAQ,MANI,SAAAlF,GACzB,MAAO,CACLsF,SAAU,kBAAMtF,EAASuF,WAIdL,EAhBA,SAAAZ,GAAU,IACfgB,EAAahB,EAAbgB,SAMR,OAJAE,qBAAU,WACRF,MACC,CAACA,IAEG,kBAAC,IAAD,CAAUV,GAAG,SCGhBa,EAAiB7B,GAAe,WACpC,OAAO,iCAEH8B,EAA+B9B,GAAe,WAClD,OAAO,8DAEH+B,EAAmC/B,GAAe,WACtD,OAAO,8DAEHgC,EAAoBhC,GAAe,WACvC,OAAO,uDAEHiC,EAAiBjC,GAAe,WACpC,OAAO,8DAEHkC,EAAoBlC,GAAe,WACvC,OAAO,wDAwDMmC,cAAWb,aAZF,SAACpB,GACvB,MAAO,CACLe,gBAAiBf,EAAMxB,KAAKuC,oBAIL,SAAC7E,GAC1B,MAAO,CACLgG,gBAAiB,kBAAMhG,EAASuF,WAIVL,EArDd,SAACZ,GAAW,IACd0B,EAAoB1B,EAApB0B,gBAERR,qBAAU,WACRQ,MACC,CAACA,IAEJ,IAAIC,EACF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,eAAenC,UAAW8B,IACtC,kBAAC,IAAD,CAAOK,KAAK,kBAAkBnC,UAAW+B,IACzC,kBAAC,IAAD,CAAOI,KAAK,IAAInC,UAAWsB,EAAac,OAAK,IAC7C,kBAAC,IAAD,CAAUvB,GAAG,OAoBjB,OAhBIN,EAAMO,kBACRoB,EACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aAAanC,UAAW0B,IACpC,kBAAC,IAAD,CAAOS,KAAK,cAAcnC,UAAW2B,IACrC,kBAAC,IAAD,CAAOQ,KAAK,qBAAqBnC,UAAW2B,IAC5C,kBAAC,IAAD,CAAOQ,KAAK,4BAA4BnC,UAAW6B,IACnD,kBAAC,IAAD,CAAOM,KAAK,6BAA6BnC,UAAW4B,IACpD,kBAAC,IAAD,CAAOO,KAAK,wCAAwCnC,UAAW4B,IAC/D,kBAAC,IAAD,CAAOO,KAAK,gBAAgBnC,UAAWqC,IACvC,kBAAC,IAAD,CAAOF,KAAK,IAAInC,UAAW0B,EAAgBU,OAAK,IAChD,kBAAC,IAAD,CAAUvB,GAAG,QAMjB,yBAAKD,UAAU,OACb,kBAAC,EAAD,KACGsB,QC1DWI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0CChBAC,EAAe,CACnB/F,SAAU,GACVb,QAAS,GACT6G,SAAS,EACTtG,OAAQ,IAGJuG,EAA0B,SAAC9C,EAAO+C,GACtC,OAAO,2BACF/C,GADL,IAEEzD,OAAQwG,EAAOxG,UAIbyG,EAAqB,SAAChD,EAAO+C,GACjC,OAAO,2BACF/C,GADL,IAEE6C,SAAS,EACTtG,OAAQ,MAIN0G,EAAuB,SAACjD,EAAO+C,GACnC,OAAO,2BACF/C,GADL,IAEE6C,SAAS,EACThG,SAAS,YAAKkG,EAAOlG,UACrBN,OAAQ,MAIN2G,EAAoB,SAAClD,EAAO+C,GAChC,OAAO,2BACF/C,GADL,IAEE6C,SAAS,EACTtG,OAAQwG,EAAOxG,UAIb4G,EAAiC,SAACnD,EAAO+C,GAC7C,OAAO,2BACF/C,GADL,IAEEhE,QAAS+G,EAAO/G,WAIdoH,EAA8B,SAACpD,EAAO+C,GAC1C,OAAO,2BACF/C,GADL,IAEEzD,OAAQwG,EAAOxG,UAIbZ,EAAuB,SAACqE,EAAO+C,GACnC,IAAMM,EAAcrD,EAAMnD,SAASyG,QACjC,SAAAtH,GAAO,OAAIA,EAAQJ,oBAAsBmH,EAAOnH,qBAElD,OAAO,2BACFoE,GADL,IAEEnD,SAAS,YAAKwG,MAIZE,EAAoB,SAACvD,EAAO+C,GAChC,OAAO,2BACF/C,GADL,IAEEzD,OAAQwG,EAAO9F,SA+BJuG,EA3BC,WAAmC,IAAlCxD,EAAiC,uDAAzB4C,EAAcG,EAAW,uCAChD,OAAQA,EAAOlH,MACb,KAAKC,IACH,OAAOgH,EAAwB9C,EAAO+C,GAExC,KAAKjH,IACH,OAAOkH,EAAmBhD,GAC5B,KAAKlE,IACH,OAAOmH,EAAqBjD,EAAO+C,GACrC,KAAKjH,IACH,OAAOoH,EAAkBlD,EAAO+C,GAElC,KAAKjH,IACH,OAAOqH,EAA+BnD,EAAO+C,GAC/C,KAAKjH,IACH,OAAOsH,EAA4BpD,EAAO+C,GAE5C,KAAKjH,IACH,OAAOH,EAAqBqE,EAAO+C,GACrC,KAAKjH,IACH,OAAOyH,EAAkBvD,EAAO+C,GAElC,QACE,OAAO/C,IC7FP4C,EAAe,CACnBlF,MAAO,GACPE,KAAM,GACNX,MAAO,GACP4F,SAAS,GAGL3F,EAA8B,SAAC8C,EAAO+C,GAC1C,OAAO,2BACF/C,GADL,IAEEpC,KAAM,GACNX,MAAO8F,EAAO9F,SAIZwG,EAAyB,SAACzD,EAAO+C,GACrC,OAAO,2BACF/C,GADL,IAEE6C,SAAS,EACTjF,KAAM,GACNX,MAAO,MAILyG,EAA2B,SAAC1D,EAAO+C,GACvC,OAAO,2BACF/C,GADL,IAEEtC,MAAM,YAAKqF,EAAOrF,OAClBT,MAAO,GACP4F,SAAS,KAIPc,EAAwB,SAAC3D,EAAO+C,GACpC,OAAO,2BACF/C,GADL,IAEE6C,SAAS,EACT5F,MAAO8F,EAAO9F,SAIZ2G,EAA8B,SAAC5D,EAAO+C,GAC1C,OAAO,2BACF/C,GADL,IAEEpC,KAAMmF,EAAOnF,KACbX,MAAO,MAIL4G,EAA2B,SAAC7D,EAAO+C,GACvC,OAAO,2BACF/C,GADL,IAEE/C,MAAO8F,EAAO9F,SAIZE,EAA2B,SAAC6C,EAAO+C,GACvC,IAAMe,EAAW9D,EAAMtC,MAAM4F,QAAO,SAAA1F,GAAI,OAAIA,EAAKmG,kBAAoBhB,EAAO1F,YAC5E,OAAO,2BACF2C,GADL,IAEEtC,MAAM,YAAKoG,MAITE,EAAwB,SAAChE,EAAO+C,GACpC,OAAO,2BACF/C,GADL,IAEE/C,MAAO8F,EAAO9F,SAuBHuG,EAnBC,WAAmC,IAAlCxD,EAAiC,uDAAzB4C,EAAcG,EAAW,uCAChD,OAAQA,EAAOlH,MACb,KAAKC,IAA6C,OAAOoB,EAA4B8C,EAAO+C,GAE5F,KAAKjH,IAAuC,OAAO2H,EAAuBzD,GAC1E,KAAKlE,IAAyC,OAAO4H,EAAyB1D,EAAO+C,GACrF,KAAKjH,IAAsC,OAAO6H,EAAsB3D,EAAO+C,GAE/E,KAAKjH,IAA8C,OAAO8H,EAA4B5D,EAAO+C,GAC7F,KAAKjH,IAA2C,OAAO+H,EAAyB7D,EAAO+C,GAEvF,KAAKjH,IAAyC,OAAOqB,EAAyB6C,EAAO+C,GACrF,KAAKjH,IAAsC,OAAOkI,EAAsBhE,EAAO+C,GAE/E,QACE,OAAO/C,ICtFP4C,EAAe,CACnBpE,KAAM,GACNvB,MAAO,GACP8D,iBAAiB,GAGbkD,EAAuB,SAACjE,EAAO+C,GACnC,OAAO,2BACF/C,GADL,IAEExB,KAAMuE,EAAOvE,KACbvB,MAAO,GACP8D,iBAAiB,KAIfmD,GAAoB,SAAClE,EAAO+C,GAChC,OAAO,2BACF/C,GADL,IAEE/C,MAAO8F,EAAO9F,SAIZkH,GAAe,SAACnE,EAAO+C,GAG3B,OAFA/D,QAAQC,IAAI,gBAAiB8D,EAAOvE,MAE7B,2BACFwB,GADL,IAEExB,KAAMuE,EAAOvE,KACbvB,MAAM,GACN8D,iBAAiB,KAIfqD,GAAY,SAACpE,EAAO+C,GACxB,OAAO,2BACF/C,GADL,IAEExB,KAAM,GACNvB,MAAO8F,EAAO9F,MACd8D,iBAAiB,KAIf5B,GAAkB,SAACa,EAAO+C,GAC9B,OAAO,2BACF/C,GADL,IAEE/C,MAAO,MAIL8B,GAAS,SAACiB,EAAO+C,GAGrB,OAFA/D,QAAQC,IAAI,6BAEL,2BACFe,GADL,IAEExB,KAAM,GACNvB,MAAO,GACP8D,iBAAiB,KAoBNyC,GAhBC,WAAiC,IAAhCxD,EAA+B,uDAAzB4C,EAAcG,EAAW,uCAC9C,OAAQA,EAAOlH,MACb,KAAKC,IAAiC,OAAOmI,EAAqBjE,EAAO+C,GACzE,KAAKjH,IAA8B,OAAOoI,GAAkBlE,EAAO+C,GAEnE,KAAKjH,IAA2B,OAAOqI,GAAanE,EAAO+C,GAC3D,KAAKjH,IAAwB,OAAOsI,GAAUpE,EAAO+C,GACrD,KAAKjH,IAA+B,OAAOqD,GAAgBa,GAE3D,KAAKlE,IAAoB,OAAOiD,GAAOiB,GAEvC,QAAS,OAAOA,ICpELqE,eAAgB,CAC7BrI,QAASsI,EACTC,QAASC,EACThG,KAAMiG,KCJFC,GAAa,CAACC,KACdC,GAEyDC,IAE/D7F,QAAQC,IAAI2F,GAAkBE,cAE9B,IAYeC,GAZDC,YACZC,GACAL,GAAiBM,IAAe,WAAf,EAAmBR,MCFhCS,GAEF,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAMRK,IAASC,OAAOF,GAAKG,SAASC,eAAe,SN8GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxF,MAAK,SAAAyF,GACJA,EAAaC,gBAEdC,OAAM,SAAA5I,GACL+B,QAAQ/B,MAAMA,EAAM6I,c","file":"static/js/main.5cec5005.chunk.js","sourcesContent":["export const CREATE_UPDATE_PROJECT_FAIL = 'CREATE_UPDATE_PROJECT_FAIL'\r\n\r\nexport const FETCH_PROJECTS_START = 'FETCH_PROJECTS_START'\r\nexport const FETCH_PROJECTS_SUCCESS = 'FETCH_PROJECTS_SUCCESS'\r\nexport const FETCH_PROJECTS_FAIL = 'FETCH_PROJECTS_FAIL'\r\n\r\nexport const FETCH_PROJECT_BY_PROJECT_ID_SUCCESS = 'FETCH_PROJECT_BY_PROJECT_ID_SUCCESS'\r\nexport const FETCH_PROJECT_BY_PROJECT_ID_FAIL = 'FETCH_PROJECT_BY_PROJECT_ID_FAIL'\r\n\r\nexport const DELETE_PROJECT_SUCCESS = 'DELETE_PROJECT_SUCCESS'\r\nexport const DELETE_PROJECT_FAIL = 'DELETE_PROJECT_FAIL'\r\n\r\n// project task type\r\nexport const CREATE_UPDATE_PROJECT_TASK_FAIL = 'CREATE_UPDATE_PROJECT_TASK_FAIL'\r\n\r\nexport const FETCH_PROJECT_TASKS_START = 'FETCH_PROJECT_TASKS_START'\r\nexport const FETCH_PROJECT_TASKS_SUCCESS = 'FETCH_PROJECT_TASKS_SUCCESS'\r\nexport const FETCH_PROJECT_TASKS_FAIL = 'FETCH_PROJECT_TASKS_FAIL'\r\n\r\nexport const FETCH_PROJECT_TASK_BY_ID_SUCCESS = 'FETCH_PROJECT_TASK_BY_ID_SUCCESS'\r\nexport const FETCH_PROJECT_TASK_BY_ID_FAIL = 'FETCH_PROJECT_TASK_BY_ID_FAIL'\r\n\r\nexport const DELETE_PROJECT_TASK_SUCCESS = 'DELETE_PROJECT_TASK_SUCCESS'\r\nexport const DELETE_PROJECT_TASK_FAIL = 'DELETE_PROJECT_TASK_FAIL'\r\n\r\n// user\r\nexport const CREATE_USER_SUCCESS = 'CREATE_USER_SUCCESS'\r\nexport const CREATE_USER_FAIL = 'CREATE_USER_FAIL'\r\n\r\nexport const LOGIN_START = 'LOGIN_START'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const CLEAR_LOGIN_ERROR = 'CLEAR_LOGIN_ERROR'\r\n\r\nexport const LOGOUT = 'LOGOUT'","import axios from 'axios'\r\nimport * as actionTypes from './actionTypes'\r\n\r\nexport const createUpdateProjectFail = (errors) => {\r\n  return {\r\n    type: actionTypes.CREATE_UPDATE_PROJECT_FAIL,\r\n    errors,\r\n  }\r\n}\r\n\r\nexport const fetchProjectsStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_PROJECTS_START,\r\n  }\r\n}\r\n\r\nexport const fetchProjectsSuccess = (projects) => {\r\n  return {\r\n    type: actionTypes.FETCH_PROJECTS_SUCCESS,\r\n    projects,\r\n  }\r\n}\r\n\r\nexport const fetchProjectsFail = (errors) => {\r\n  return {\r\n    type: actionTypes.FETCH_PROJECTS_FAIL,\r\n    errors,\r\n  }\r\n}\r\n\r\nexport const fetchProjectByProjectIdSuccess = (project) => {\r\n  return {\r\n    type: actionTypes.FETCH_PROJECT_BY_PROJECT_ID_SUCCESS,\r\n    project,\r\n  }\r\n}\r\n\r\nexport const fetchProjectByProjectIdFail = (errors) => {\r\n  return {\r\n    type: actionTypes.FETCH_PROJECT_BY_PROJECT_ID_FAIL,\r\n    errors: errors,\r\n  }\r\n}\r\n\r\nexport const deleteProjectSuccess = (projectIdentifier) => {\r\n  return {\r\n    type: actionTypes.DELETE_PROJECT_SUCCESS,\r\n    projectIdentifier,\r\n  }\r\n}\r\n\r\nexport const deleteProjectFail = (error) => {\r\n  return {\r\n    type: actionTypes.DELETE_PROJECT_FAIL,\r\n    error,\r\n  }\r\n}\r\n\r\nexport const createUpdateProject = (project, history) => {\r\n  return async dispatch => {\r\n    try {\r\n      await axios.post('/api/project', project)\r\n      history.push('/dashboard')\r\n    } catch (err) {\r\n      dispatch(createUpdateProjectFail(err.response.data))\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchProjects = () => {\r\n  return async dispatch => {\r\n    dispatch(fetchProjectsStart())\r\n    try {\r\n      const res = await axios.get('/api/project/all')\r\n      dispatch(fetchProjectsSuccess(res.data))\r\n    } catch (error) {\r\n      dispatch(fetchProjectsFail(error))\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchProjectByProjectId = (projectIdentifier) => {\r\n  return async dispatch => {\r\n    try {\r\n      const res = await axios.get(`/api/project/${projectIdentifier}`)\r\n      dispatch(fetchProjectByProjectIdSuccess(res.data))\r\n    } catch (err) {\r\n      dispatch(fetchProjectByProjectIdFail(err.response.data))\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteProjectByProjectId = (projectIdentifier, history) => {\r\n  return async dispatch => {\r\n    try {\r\n      await axios.delete(`/api/project/${projectIdentifier}`)\r\n      // dispatch(fetchProjects())\r\n      // history.push('/dashboard')\r\n      dispatch(deleteProjectSuccess(projectIdentifier))\r\n    } catch (err) {\r\n      dispatch(deleteProjectFail(err))\r\n    }\r\n  }\r\n}","import axios from 'axios'\r\nimport * as actionTypes from './actionTypes'\r\n\r\nexport const fetchProjectTasksStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_PROJECT_TASKS_START\r\n  }\r\n}\r\n\r\nexport const fetchProjectTasksSuccess = (tasks) => {\r\n  return {\r\n    type: actionTypes.FETCH_PROJECT_TASKS_SUCCESS,\r\n    tasks\r\n  }\r\n}\r\n\r\nexport const fetchProjectTasksFail = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_PROJECT_TASKS_FAIL,\r\n    error\r\n  }\r\n}\r\n\r\nexport const createUpdateProjectTaskFail = (error) => {\r\n  return {\r\n    type: actionTypes.CREATE_UPDATE_PROJECT_TASK_FAIL,\r\n    error\r\n  }\r\n}\r\n\r\nexport const fetchProjectTaskByIdSuccess = (task) => {\r\n  return {\r\n    type: actionTypes.FETCH_PROJECT_TASK_BY_ID_SUCCESS,\r\n    task\r\n  }\r\n}\r\n\r\nexport const fetchProjectTaskByIdFail = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_PROJECT_TASK_BY_ID_FAIL,\r\n    error\r\n  }\r\n}\r\n\r\nexport const deleteProjectTaskSuccess = (taskSequence) => {\r\n  return {\r\n    type: actionTypes.DELETE_PROJECT_TASK_SUCCESS,\r\n    sequence: taskSequence\r\n  }\r\n}\r\n\r\nexport const deleteProjectTaskFail = (error) => {\r\n  return {\r\n    type: actionTypes.DELETE_PROJECT_TASK_FAIL,\r\n    error\r\n  }\r\n}\r\n\r\nexport const createProjectTask = (projectId, projectTask, history) => {\r\n  return async dispatch => {\r\n    try {\r\n      await axios.post(`/api/project-task/${projectId}`, projectTask)\r\n      history.push(`/project-board/${projectId}`)\r\n    } catch (err) {\r\n      dispatch(createUpdateProjectTaskFail(err.response.data))\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchProjectTasks = (projectIdentifier) => {\r\n  return async dispatch => {\r\n    dispatch(fetchProjectTasksStart())\r\n    try {\r\n      const res = await axios.get(`/api/project-task/${projectIdentifier}`)\r\n      dispatch(fetchProjectTasksSuccess(res.data))\r\n    } catch (error) {\r\n      dispatch(fetchProjectTasksFail(error.response.data))\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchProjectTaskById = (projectId, taskSequence) => {\r\n  return async dispatch => {\r\n    try {\r\n      const res = await axios.get(`/api/project-task/${projectId}/${taskSequence}`)\r\n      dispatch(fetchProjectTaskByIdSuccess(res.data))\r\n    } catch (err) {\r\n      dispatch(fetchProjectTaskByIdFail(err.response.data))\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteProjectTaskById = (projectId, taskSequence) => {\r\n  return async dispatch => {\r\n    try {\r\n      await axios.delete(`/api/project-task/${projectId}/${taskSequence}`)\r\n      dispatch(deleteProjectTaskSuccess(taskSequence))\r\n    } catch (err) {\r\n      dispatch(deleteProjectTaskFail(err))\r\n    }\r\n  }  \r\n}\r\n\r\nexport const updateProjectTask = (projectId, taskId, projectTask, history) => {\r\n  return async dispatch => {\r\n    try {\r\n      await axios.patch(`/api/project-task/${projectId}/${taskId}`, projectTask)\r\n      history.push(`/project-board/${projectId}`)\r\n    } catch (err) {\r\n      dispatch(createUpdateProjectTaskFail(err.response.data))\r\n    }\r\n  }\r\n}","import axios from 'axios'\r\n\r\nexport const setJWT = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = token\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization']\r\n  }\r\n}","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\nimport { setJWT } from '../../utils/authUtils'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nexport const createNewUserSuccess = (user) => {\r\n  return {\r\n    type: actionTypes.CREATE_USER_SUCCESS,\r\n    user: user,\r\n  }\r\n}\r\n\r\nexport const createNewUserFail = (error) => {\r\n  return {\r\n    type: actionTypes.CREATE_USER_FAIL,\r\n    error: error\r\n  }\r\n}\r\n\r\nexport const loginSuccess = (authUser) => {\r\n  return {\r\n    type: actionTypes.LOGIN_SUCCESS,\r\n    user: authUser,\r\n  }\r\n}\r\n\r\nexport const loginFail = (error) => {\r\n  return {\r\n    type: actionTypes.LOGIN_FAIL,\r\n    error: error\r\n  }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n  console.log('called check TIMEOUT', expirationTime);\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      console.log('Check TIMEOUT');\r\n      dispatch(logout())\r\n    }, expirationTime * 1000)\r\n  }\r\n}\r\n\r\nexport const createNewUser = (newUser, history) => {\r\n  return async dispatch => {\r\n    try {\r\n      const res = await axios.post('/api/users/register', newUser)\r\n      history.push('/users/login')    \r\n      dispatch(createNewUserSuccess(res.data))\r\n    } catch (error) {\r\n      dispatch(createNewUserFail(error.response.data));\r\n    }\r\n  }\r\n}\r\n\r\nexport const tryLogin = (user) => {\r\n  return async dispatch => {\r\n    try {\r\n      const res = await axios.post('/api/users/login', user)\r\n      const { token } = res.data\r\n      localStorage.setItem('JWT', token)\r\n      setJWT(token)\r\n      const decoded = jwt_decode(token)\r\n\r\n      dispatch(loginSuccess(decoded))\r\n      // disable auto logout..\r\n      // dispatch(checkAuthTimeout(decoded.exp - Date.now() / 1000))\r\n    } catch (error) {\r\n      // console.log(error)\r\n      // console.log(error.response.data)\r\n      dispatch(loginFail(error.response.data))\r\n    }\r\n  }\r\n}\r\n\r\nexport const logout = (user) => {\r\n  console.log('action => logout called');\r\n  \r\n  localStorage.removeItem('JWT')\r\n  return {\r\n    type: actionTypes.LOGOUT\r\n  }\r\n}\r\n\r\nexport const clearLoginError = () => {\r\n  return {\r\n    type: actionTypes.CLEAR_LOGIN_ERROR\r\n  }\r\n}\r\n\r\nexport const checkAuthState = () => {\r\n  return dispatch => {\r\n    const authToken = localStorage.getItem('JWT')\r\n    if (!authToken) {\r\n      dispatch(logout())\r\n    } else {\r\n      const decoded_token = jwt_decode(authToken)\r\n      const currentTime = Date.now() / 1000\r\n      if (decoded_token.exp <= currentTime) {\r\n        dispatch(logout())\r\n      } else {\r\n        setJWT(authToken)\r\n        dispatch(checkAuthTimeout(decoded_token.exp - Date.now() / 1000))\r\n      }\r\n    }\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nconst asyncComponent = (importComponent) => {\r\n  return class extends Component {\r\n    state = {\r\n      component: null\r\n    }\r\n\r\n    componentDidMount() {\r\n      importComponent()\r\n        .then(cmp => {\r\n          this.setState({ component: cmp.default })\r\n        })\r\n    }\r\n\r\n    render() {\r\n      const C = this.state.component\r\n\r\n      return C ? <C {...this.props} /> : null\r\n    }\r\n  }\r\n}\r\n\r\nexport default asyncComponent","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n  let menu = (\r\n    <React.Fragment>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link \" to=\"/users/register\">\r\n          Sign Up\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/users/login\">\r\n          Login\r\n        </Link>\r\n      </li>\r\n    </React.Fragment>\r\n  )\r\n\r\n  if (props.isAuthenticated) {\r\n    menu = (\r\n      <React.Fragment>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/dashboard\">\r\n            <i className=\"fas fa-user-circle mr-1\" />{props.username}\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/users/logout\">\r\n            Logout\r\n          </Link>\r\n        </li>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand text-warning\" to=\"/\">\r\n          Personal Project Management\r\n        </Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            {menu}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Header from './Header'\r\n\r\nfunction Layout(props) {\r\n  const { isAuthenticated, user } = props\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Header isAuthenticated={isAuthenticated} username={user.fullname} />\r\n      {props.children}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.user.isAuthenticated,\r\n    user: state.user.user\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst WelcomePage = () => {\r\n  return (\r\n    <div className=\"landing\">\r\n      <div className=\"light-overlay landing-inner text-dark\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 text-center\">\r\n              <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n              <p className=\"lead\">\r\n                Create your account to join active projects or start your own\r\n              </p>\r\n              <hr />\r\n              <Link to=\"/users/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                Sign Up\r\n              </Link>\r\n              <Link to=\"/users/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                Login\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WelcomePage\r\n","import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../store/actions';\r\n\r\nconst Logout = props => {\r\n  const { onLogout } = props\r\n\r\n  useEffect(() => {\r\n    onLogout();\r\n  }, [onLogout]);\r\n\r\n  return <Redirect to=\"/\" />;\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { useEffect } from 'react'\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport asyncComponent from './hoc/asyncComponent/asyncComponent'\r\n\r\nimport './App.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n// import Header from './components/Layout/Header'\r\nimport Layout from './components/Layout/Layout'\r\nimport WelcomePage from './components/Layout/WelcomePage'\r\nimport Logout from './container/Users/Logout'\r\n\r\nimport * as actions from './store/actions'\r\n\r\n\r\nconst asyncDashboard = asyncComponent(() => {\r\n  return import('./container/Dashboard')\r\n})\r\nconst asyncCreateUpdateProjectForm = asyncComponent(() => {\r\n  return import('./container/CreateUpdateProjectForm')\r\n})\r\nconst asyncCreateUpdateProjectTaskForm = asyncComponent(() => {\r\n  return import('./container/CreateUpdateProjectTaskForm')\r\n})\r\nconst asyncProjectBoard = asyncComponent(() => {\r\n  return import('./container/ProjectBoard')\r\n})\r\nconst asyncLoginForm = asyncComponent(() => {\r\n  return import('./container/Users/LoginForm')\r\n})\r\nconst asyncRegisterForm = asyncComponent(() => {\r\n  return import('./container/Users/RegisterForm')\r\n})\r\n\r\nconst App = (props) => {\r\n  const { onTryAutoSignup } = props\r\n\r\n  useEffect(() => {\r\n    onTryAutoSignup()\r\n  }, [onTryAutoSignup])\r\n\r\n  let routes = (\r\n    <Switch>\r\n      <Route path=\"/users/login\" component={asyncLoginForm} />\r\n      <Route path=\"/users/register\" component={asyncRegisterForm} />\r\n      <Route path=\"/\" component={WelcomePage} exact />\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  )\r\n\r\n  if (props.isAuthenticated) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/dashboard\" component={asyncDashboard} />\r\n        <Route path=\"/addProject\" component={asyncCreateUpdateProjectForm} />\r\n        <Route path=\"/updateProject/:id\" component={asyncCreateUpdateProjectForm} />\r\n        <Route path=\"/project-board/:projectId\" component={asyncProjectBoard} />\r\n        <Route path=\"/addProjectTask/:projectId\" component={asyncCreateUpdateProjectTaskForm} />\r\n        <Route path=\"/updateProjectTask/:projectId/:taskId\" component={asyncCreateUpdateProjectTaskForm} />\r\n        <Route path=\"/users/logout\" component={Logout} />\r\n        <Route path=\"/\" component={asyncDashboard} exact />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout>\r\n        {routes}\r\n      </Layout>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.user.isAuthenticated,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.checkAuthState())\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n  loading: false,\r\n  errors: {},\r\n}\r\n\r\nconst createUpdateProjectFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    errors: action.errors,\r\n  }\r\n}\r\n\r\nconst fetchProjectsStart = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: true,\r\n    errors: {},\r\n  }\r\n}\r\n\r\nconst fetchProjectsSuccess = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    projects: [...action.projects],\r\n    errors: {},\r\n  }\r\n}\r\n\r\nconst fetchProjectsFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    errors: action.errors,\r\n  }\r\n}\r\n\r\nconst fetchProjectByProjectIdSuccess = (state, action) => {\r\n  return {\r\n    ...state,\r\n    project: action.project,\r\n  }\r\n}\r\n\r\nconst fetchProjectByProjectIdFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    errors: action.errors,\r\n  }\r\n}\r\n\r\nconst deleteProjectSuccess = (state, action) => {\r\n  const newProjects = state.projects.filter(\r\n    project => project.projectIdentifier !== action.projectIdentifier\r\n  )\r\n  return {\r\n    ...state,\r\n    projects: [...newProjects]\r\n  }\r\n}\r\n\r\nconst deleteProjectFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    errors: action.error,\r\n  }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_UPDATE_PROJECT_FAIL:\r\n      return createUpdateProjectFail(state, action)\r\n\r\n    case actionTypes.FETCH_PROJECTS_START:\r\n      return fetchProjectsStart(state, action)\r\n    case actionTypes.FETCH_PROJECTS_SUCCESS:\r\n      return fetchProjectsSuccess(state, action)\r\n    case actionTypes.FETCH_PROJECTS_FAIL:\r\n      return fetchProjectsFail(state, action)\r\n\r\n    case actionTypes.FETCH_PROJECT_BY_PROJECT_ID_SUCCESS:\r\n      return fetchProjectByProjectIdSuccess(state, action)\r\n    case actionTypes.FETCH_PROJECT_BY_PROJECT_ID_FAIL:\r\n      return fetchProjectByProjectIdFail(state, action)\r\n\r\n    case actionTypes.DELETE_PROJECT_SUCCESS:\r\n      return deleteProjectSuccess(state, action)\r\n    case actionTypes.DELETE_PROJECT_FAIL:\r\n      return deleteProjectFail(state, action)\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  task: {},\r\n  error: {},\r\n  loading: false,\r\n}\r\n\r\nconst createUpdateProjectTaskFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    task: {},\r\n    error: action.error\r\n  }\r\n}\r\n\r\nconst fetchProjectTasksStart = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: true,\r\n    task: {},\r\n    error: {},\r\n  }\r\n}\r\n\r\nconst fetchProjectTasksSuccess = (state, action) => {\r\n  return {\r\n    ...state,\r\n    tasks: [...action.tasks],\r\n    error: {},\r\n    loading: false,\r\n  }\r\n}\r\n\r\nconst fetchProjectTasksFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    error: action.error,\r\n  }\r\n}\r\n\r\nconst fetchProjectTaskByIdSuccess = (state, action) => {\r\n  return {\r\n    ...state,\r\n    task: action.task,\r\n    error: {}\r\n  }\r\n}\r\n\r\nconst fetchProjectTaskByIdFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    error: action.error\r\n  }\r\n}\r\n\r\nconst deleteProjectTaskSuccess = (state, action) => {\r\n  const newTasks = state.tasks.filter(task => task.projectSequence !== action.sequence)\r\n  return {\r\n    ...state,\r\n    tasks: [...newTasks]\r\n  }\r\n}\r\n\r\nconst deleteProjectTaskFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    error: action.error\r\n  }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_UPDATE_PROJECT_TASK_FAIL: return createUpdateProjectTaskFail(state, action)\r\n\r\n    case actionTypes.FETCH_PROJECT_TASKS_START: return fetchProjectTasksStart(state, action)\r\n    case actionTypes.FETCH_PROJECT_TASKS_SUCCESS: return fetchProjectTasksSuccess(state, action)\r\n    case actionTypes.FETCH_PROJECT_TASKS_FAIL: return fetchProjectTasksFail(state, action)\r\n\r\n    case actionTypes.FETCH_PROJECT_TASK_BY_ID_SUCCESS: return fetchProjectTaskByIdSuccess(state, action)\r\n    case actionTypes.FETCH_PROJECT_TASK_BY_ID_FAIL: return fetchProjectTaskByIdFail(state, action)\r\n\r\n    case actionTypes.DELETE_PROJECT_TASK_SUCCESS: return deleteProjectTaskSuccess(state, action)\r\n    case actionTypes.DELETE_PROJECT_TASK_FAIL: return deleteProjectTaskFail(state, action)\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  user: {},\r\n  error: {},\r\n  isAuthenticated: false,\r\n}\r\n\r\nconst createNewUserSuccess = (state, action) => {\r\n  return {\r\n    ...state,\r\n    user: action.user,\r\n    error: {},\r\n    isAuthenticated: false,\r\n  }\r\n}\r\n\r\nconst createNewUserFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    error: action.error\r\n  }\r\n}\r\n\r\nconst loginSuccess = (state, action) => {\r\n  console.log('login success', action.user);\r\n  \r\n  return {\r\n    ...state,\r\n    user: action.user,\r\n    error:{},\r\n    isAuthenticated: true,\r\n  }\r\n}\r\n\r\nconst loginFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    user: {},\r\n    error: action.error,\r\n    isAuthenticated: false,\r\n  }\r\n}\r\n\r\nconst clearLoginError = (state, action) => {\r\n  return {\r\n    ...state,\r\n    error: {}\r\n  }\r\n}\r\n\r\nconst logout = (state, action) => {\r\n  console.log('logout called in reducer.');\r\n  \r\n  return {\r\n    ...state,\r\n    user: {},\r\n    error: {},\r\n    isAuthenticated: false,\r\n  }\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE_USER_SUCCESS: return createNewUserSuccess(state, action)\r\n    case actionTypes.CREATE_USER_FAIL: return createNewUserFail(state, action)\r\n\r\n    case actionTypes.LOGIN_SUCCESS: return loginSuccess(state, action)\r\n    case actionTypes.LOGIN_FAIL: return loginFail(state, action)\r\n    case actionTypes.CLEAR_LOGIN_ERROR: return clearLoginError(state, action)\r\n\r\n    case actionTypes.LOGOUT: return logout(state, action)\r\n\r\n    default: return state;\r\n  }\r\n\r\n}\r\n\r\nexport default reducer","import { combineReducers } from 'redux'\r\nimport projectReducer from './project'\r\nimport backlogReducer from './backlog'\r\nimport userReducer from './user'\r\n\r\nexport default combineReducers({\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  user: userReducer,\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst middleware = [thunk]\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV === 'development'\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose : compose\r\n\r\nconsole.log(composeEnhancers, process.env.NODE_ENV)\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n)\r\n\r\n// let store\r\n// if (window.navigator.userAgent.includes('Chrome')) {\r\n//   store = createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(...middleware)))\r\n// } else {\r\n//   store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)))\r\n// }\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\n\r\nconst app = (\r\n//  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n//  </React.StrictMode>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}